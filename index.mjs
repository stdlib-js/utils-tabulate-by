// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@v0.1.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.2.0-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-index-of@v0.1.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.0-esm/index.mjs";function o(t,s){return i(s)?(n(s,"thisArg")&&(t.thisArg=s.thisArg),null):new TypeError(r("invalid argument. Options argument must be an object. Value: `%s`.",s))}function m(i,n,m){var l,d,a,h,u,p,g,j,f,c,v;if(!t(i))throw new TypeError(r("invalid argument. First argument must be a collection. Value: `%s`.",i));if(a={},2===arguments.length)j=n;else{if(g=o(a,n))throw g;j=m}if(!s(j))throw new TypeError(r("invalid argument. Last argument must be a function. Value: `%s`.",j));for(l=a.thisArg,d=0,h=[],p=[],u=i.length,c=0;c<u;c++)f=j.call(l,i[c],c),d+=1,-1===(v=e(h,f))?(h.push(f),p.push([f,1,0])):p[v][1]+=1;for(u=p.length,c=0;c<u;c++)p[c][2]=p[c][1]/d;return p}export{m as default};
//# sourceMappingURL=index.mjs.map
